## zmodload zsh/zprof ## profile startup time
## zgen reset && reloadZsh after each modification
# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=$HOME/.zsh_custom
ZGEN_AUTOLOAD_COMPINIT=0

zsh_aws() {
    local aws_profile="$AWS_PROFILE"
    if [[ -n "$aws_profile" ]]; then
        echo "AWS:"$AWS_PROFILE
    fi
}

POWERLEVEL9K_CUSTOM_AWS="zsh_aws"

POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status time dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time custom_aws virtualenv)
POWERLEVEL9K_STATUS_VERBOSE=false
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="┏"
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="┗▶ "

source "${HOME}/.zgen/zgen.zsh"

# if the init scipt doesn't exist
if ! zgen saved; then
  zgen oh-my-zsh
  zgen oh-my-zsh plugins/autojump
  zgen oh-my-zsh plugins/colored-man-pages
  zgen oh-my-zsh plugins/docker
  zgen oh-my-zsh plugins/docker-compose
  zgen oh-my-zsh plugins/git
  zgen oh-my-zsh plugins/golang
  zgen oh-my-zsh plugins/mvn
  zgen oh-my-zsh plugins/sudo
  ## zgen oh-my-zsh plugins/aws #slow startup

  #theme
  zgen load bhilburn/powerlevel9k powerlevel9k

  #extra plugins
  zgen load djui/alias-tips
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search

  # generate the init script from plugins above
  zgen save
fi

# Set keystrokes for substring searching
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# alias mvn="mvn-color"

# User configuration
#export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"


if [ -d "$HOME/bin/java" ] ; then
    export JAVA_HOME=$HOME/bin/java
    PATH=$JAVA_HOME/bin:$PATH
fi
if [ -d "$HOME/bin/scala" ] ; then
    export SCALA_HOME=$HOME/bin/scala
    PATH=$SCALA_HOME/bin:$PATH
fi
if [ -d "$HOME/bin/spark" ] ; then
    export SPARK_HOME=$HOME/bin/spark
     PATH=$SPARK_HOME/bin:$PATH
fi
if [ -d "$HOME/bin/cassandra" ] ; then
    export CASSANDRA_HOME=$HOME/bin/cassandra
    PATH=$CASSANDRA_HOME/bin:$PATH
fi
if [ -d "$HOME/bin/mongodb" ] ; then
    export MONGO_HOME=$HOME/bin/mongodb
    PATH=$MONGO_HOME/bin:$PATH
fi

# overide system python with brew python
#if [ -d "/usr/local/opt/python/libexec/bin" ] ; then
#    PATH="/usr/local/opt/python/libexec/bin:$PATH"
#fi

#export PATH=$PATH:$HOME/bin

lazy_source () {
    eval " $1 () { [ -f $2 ] && source $2 && $1 \$@ }"
}

# golang
#export GOROOT=/usr/local/go
#export PATH=$PATH:$GOROOT/bin
#export GOPATH=$HOME/devs/gocode
#export PATH=$PATH:$GOPATH/bin

# The next line updates PATH for the Google Cloud SDK.
#if [ -f $HOME/bin/google-cloud-sdk/path.zsh.inc ]; then
#  source '$HOME/bin/google-cloud-sdk/path.zsh.inc'
#fi

# The next line enables shell command completion for gcloud.
#if [ -f $HOME/bin/google-cloud/completion.zsh.inc ]; then
#  source '$HOME/bin/google-cloud-sdk/completion.zsh.inc'
#fi

# loads virtualenvwrapper
#export WORKON_HOME=$HOME/.virtualenvs
#export VIRTUALENVWRAPPER_PYTHON=/usr/local/opt/python/libexec/bin/python
#export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv
#export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
#source /usr/local/bin/virtualenvwrapper_lazy.sh

#source '$HOME/lib/azure-cli/az.completion'

## Add yarn to the PATH
#export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"

# tabtab source for jhipster package
# uninstall by removing these lines or running `tabtab uninstall jhipster`
#[[ -f $HOME/devs/github/temp-jhispter/node_modules/tabtab/.completions/jhipster.zsh ]] && . $HOME/devs/github/temp-jhispter/node_modules/tabtab/.completions/jhipster.zsh

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
#[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
#[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh


#export GPG_TTY=$(tty)
#
### Setup the gpg agent
### See https://github.com/pstadler/keybase-gpg-github
#if test -f ~/.gnupg/.gpg-agent-info -a -n "$(pgrep gpg-agent)"; then
#  source ~/.gnupg/.gpg-agent-info
#  export GPG_AGENT_INFO
#  GPG_TTY=$(tty)
#  export GPG_TTY
#else
#  eval $(gpg-agent --daemon --write-env-file ~/.gnupg/.gpg-agent-info)
#fi


## zprof ## profile startup time

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/raphael/.sdkman"
[[ -s "/Users/raphael/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/raphael/.sdkman/bin/sdkman-init.sh"
